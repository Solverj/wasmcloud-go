name: Go

on:
  push:
    branches: ["main"]
    paths:
      - '.github/workflows/component-go.yaml'
      - 'component/**'
  pull_request:
    branches: ["main"]
    paths:
      - '.github/workflows/component-go.yaml'
      - 'component/**'

env:
  TINYGO_VERSION: "0.33.0"
  GOLANGCI_VERSION: "v1.61"
  WASH_VERSION: "0.37.0"
  WASM_TOOLS_VERSION: "1.220.0"

permissions:
  contents: read

defaults:
  run:
    working-directory: ./component

jobs:
  lint:
    # Context: https://github.com/golangci/golangci-lint-action/blob/v6.1.1/README.md#annotations
    permissions:
      # Required: allow read access to the content for analysis.
      contents: read
      # Optional: allow write access to checks to allow the action to annotate code in the PR.
      checks: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_VERSION }}
          working-directory: ./component
      - uses: cargo-bins/cargo-binstall@main
      - name: Tools
        run: |
          cargo binstall -y "wasm-tools@${WASM_TOOLS_VERSION}"

      - name: Go generate
        run: |
          go generate ./...
          if ! test -z "$(git status --porcelain)"; then
            echo "Go generate modified files. Please run go generate and commit the changes."
            git status
            exit 1
          fi

  sdk-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "./component/go.mod"
      - uses: acifani/setup-tinygo@v2
        with:
          tinygo-version: ${{ env.TINYGO_VERSION }}

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  examples:
    # Context: https://github.com/golangci/golangci-lint-action/blob/v6.1.1/README.md#annotations
    permissions:
      # Required: allow read access to the content for analysis.
      contents: read
      # Optional: allow write access to checks to allow the action to annotate code in the PR.
      checks: write
    strategy:
      matrix:
        example:
          - http-server
          - http-client
          - invoke
        tinygo-version:
          - "0.33.0"
          - "0.34.0"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "./examples/component/${{ matrix.example }}/go.mod"
      - uses: acifani/setup-tinygo@v2
        with:
          tinygo-version: ${{ matrix.tinygo-version }}
      - uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_VERSION }}
          working-directory: "./examples/component/${{ matrix.example }}"
      - uses: cargo-bins/cargo-binstall@main
      - name: Tools
        run: |
          cargo binstall -y "wash-cli@${WASH_VERSION}"
          cargo binstall -y "wasm-tools@${WASM_TOOLS_VERSION}"

      - name: Go generate
        run: |
          go generate ./...
          if ! test -z "$(git status --porcelain)"; then
            echo "Go generate modified files. Please run go generate and commit the changes."
            git status
            exit 1
          fi

      - name: wash build
        working-directory: "./examples/component/${{ matrix.example }}"
        run: |
          wash build
